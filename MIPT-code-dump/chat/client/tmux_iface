#!/usr/bin/env bash

DEFAULT_PORT=1337
CHAT_IN_FIFO=/tmp/.chat-fifo-$$-${USER?}
CHAT_SESS_NAME=chat_$$

#-------------------------------------------------------------------------------

set -e

# Directory name may end with '\n', and $(...) drops *all* the trailing '\n's.
# Work around that (older dirname versions don't have -z).
dirx=$(dirname -- "$0" && echo x)
cd -- "${dirx%$'\nx'}"

# Check if tmux is available.
if ! which tmux >/dev/null; then
    echo >&2 "Please install tmux."
    exit 1
fi

#-------------------------------------------------------------------------------

usage() {
    echo >&2 "USAGE: ${0##*/} [<host> <service>]"
    exit 2
}

if (( $# == 0 )); then
    echo "Please specify host and port to connect to manually."
    read -ep"Host: " CHAT_HOST
    : ${CHAT_HOST:?empty host, exiting.}
    read -ep"Port (default: $DEFAULT_PORT): " CHAT_PORT
    : ${CHAT_PORT:=$DEFAULT_PORT}
elif (( $# == 2 )); then
    CHAT_HOST=$1
    CHAT_PORT=$2
else
    usage
fi

#-------------------------------------------------------------------------------

tmux_validate() {
    [[ $1 != *'\'* && $1 != *';'* ]]
}

if ! tmux_validate "$CHAT_HOST"; then
    echo >&2 "Invalid host: $CHAT_HOST"
    exit 1
fi
if ! tmux_validate "$CHAT_PORT"; then
    echo >&2 "Invalid port: $CHAT_PORT"
    exit 1
fi

#-------------------------------------------------------------------------------

mkfifo -m600 -- "$CHAT_IN_FIFO"

trap 'rm -f -- "$CHAT_IN_FIFO"' SIGHUP SIGINT SIGQUIT SIGTERM SIGPIPE EXIT

# In older tmux versions, new-session and split-window only take one argument.
# Use environment variables to pass data to the helpers.
export CHAT_IN_FIFO CHAT_SESS_NAME CHAT_HOST CHAT_PORT
env --unset=TMUX tmux \
    start-server \; \
    new-session -s "$CHAT_SESS_NAME" ./tmux_helper_outwin \; \
    split-window -l 3 ./tmux_helper_inwin \; \
    rename-window "chat"
